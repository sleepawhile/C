#include<stdio.h>
#include<stdlib.h>
#define F sizeof(struct student)
struct student
{
	int num;
	char mane[30];
	struct student* next;
};
struct student* creat()
{
	int n = 0;
	struct student* p1, * p2, *head=NULL;
	p1 = p2 = (struct student*)malloc(F);
	scanf("%d%s", &p1->num, &p1->mane);
	while (p1->num != 0)
	{
		n += 1;
		if(n==1)head = p1;
		else p2->next = p1;
		p2 = p1;
		p1 = (struct student*)malloc(F);
		scanf("%d%s", &p1->num, &p1->mane);
	}
	p2->next = NULL;
	return (head);
}
struct student* shanchu(struct student* p1, struct student* p2)
{
	struct student* head1 = p1, * head2, * p;
	p = (struct student*)malloc(F);
	while (head1 != NULL)
	{
		head2 = p2;
		while ((head1->num != head2->num) && (head2->next != NULL))
			head2 = head2->next;
		if (head1->num == head2->num)
		{
			if (head1 == p1)
				p1 = head1->next;
			else
			{
				p->next = head1->next;
				head1 = head1->next;
			}
		}
		else
		{
			p = head1; head1 = head1->next;
		}

	}
	return (p1);
}
void print(struct student* p1)
{
	struct student* pr = p1;
	if(pr!=0)
	do
	{
		printf("%d %s\n", pr->num, pr->mane);
		pr = pr->next;
	} while (pr != NULL);
}
int main()
{
	struct student* pt1, * pt2;
	pt1=creat();
	pt2=creat();
	print(shanchu(pt1, pt2));
	return 0;
}
